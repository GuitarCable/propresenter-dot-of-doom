name: Release

on:
  push:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4.7' # Or use .ruby-version
      - name: Cache Ruby gems
        uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Install dependencies
        run: bundle install --path vendor/bundle
      - name: Build macOS Application (Example with a custom script)
        run: |
          # mkdir -p build/DotOfDoom.app/Contents/MacOS
          # mkdir -p build/DotOfDoom.app/Contents/MacOS/ruby
          # cp -r /Users/runner/hostedtoolcache/Ruby/3.4.7/x64/bin build/DotOfDoom.app/Contents/MacOS/ruby
          # mkdir -p build/DotOfDoom.app/Contents/MacOS/src
          # cp -r src/* build/DotOfDoom.app/Contents/MacOS/src/
          # cp config.template.yml build/DotOfDoom.app/Contents/MacOS/
          # # cp -r vendor/* build/DotOfDoom.app/Contents/MacOS/
          # echo '#!/bin/bash' > build/DotOfDoom.app/Contents/MacOS/runner
          # echo 'export PATH="./ruby:$PATH"' >> build/DotOfDoom.app/Contents/MacOS/runner
          # echo 'ruby "$0/./src/TextSender.rb"' >> build/DotOfDoom.app/Contents/MacOS/runner
          # chmod +x build/DotOfDoom.app/Contents/MacOS/runner
          # # Add Info.plist and other necessary files for a proper .app bundle
          zip -r dot-of-doom.zip run.rb src vendor Gemfile config.template.yml
      - name: Set up Git
        run: |
          git fetch --tags
      - name: Get latest tag and compute next version
        id: get_tag
        run: |
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1` 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $latest_tag"
          version=${latest_tag#v}
          IFS='.' read -r major minor patch <<< "$version"
          next_patch=$((patch + 1))
          next_tag="v$major.$minor.$next_patch"
          echo "Next tag: $next_tag"
          echo "next_tag=$next_tag" >> $GITHUB_OUTPUT
      # - name: Zip macOS app
      #   run: zip -r DotOfDoom-macOS.zip build/DotOfDoom.app
      # - name: Zip cruby exec
      #   run: |
      #     mkdir DotOfDoom-macOS-x86_64
      #     cp TextSender config.template.yml DotOfDoom-macOS-x86_64/
      #     zip -r DotOfDoom-macOS-x86_64.zip DotOfDoom-macOS-x86_64
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_tag.outputs.next_tag }}
          name: Release ${{ steps.get_tag.outputs.next_tag }}
          files: |
                 dot-of-doom.zip
          body: |
            Auto-generated release from ubuntu runner
        env:
          GITHUB_TOKEN: ${{ secrets.CI_CD }}          
